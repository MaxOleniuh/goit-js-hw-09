{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAIA,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,EACFI,EAAQ,CAAEN,WAAUC,UAEpBM,EAAO,CAAEP,WAAUC,S,GAEpBA,E,IAZMQ,SAASC,cAAc,SA4C/BC,iBAAiB,UA5BM,SAAAC,GAC1BA,EAAEC,iBAUF,IARA,IAEmBC,EAAfF,EAAEG,cADJC,SAAYC,EAAMH,EAANG,OAAQhB,EAAKa,EAALb,MAAOiB,EAAIJ,EAAJI,KAGvBC,GAAeF,EAAOG,MACxBC,GAAcpB,EAAMmB,MAClBE,GAAaJ,EAAKE,MAEfG,EAAI,EAAGA,GAAKJ,EAAaI,IAChCxB,EAAcwB,EAAGF,GACdG,MAAK,SAAAC,GACJC,EAAA7B,GAAS8B,OAAOC,QACd,uBAA+CC,OAAtBJ,EAAOzB,SAAS,QAAmB6B,OAAbJ,EAAOxB,MAAM,M,IAG/D6B,OAAM,SAAAC,GACLL,EAAA7B,GAAS8B,OAAOK,QACd,sBAA2CH,OAArBE,EAAM/B,SAAS,QAAkB6B,OAAZE,EAAM9B,MAAM,M,IAI7DoB,GAAcC,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nconst alertPromiseHandler = e => {\n  e.preventDefault();\n\n  const {\n    elements: { amount, delay, step },\n  } = e.currentTarget;\n\n  const amountValue = +amount.value;\n  let delayValue = +delay.value;\n  const stepValue = +step.value;\n\n  for (let i = 1; i <= amountValue; i++) {\n    createPromise(i, delayValue)\n      .then(result => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${result.position} in ${result.delay}ms`\n        );\n      })\n      .catch(error => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${error.position} in ${error.delay}ms`\n        );\n      });\n\n    delayValue += stepValue;\n  }\n};\n\nform.addEventListener('submit', alertPromiseHandler);\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","document","querySelector","addEventListener","e","preventDefault","_elements","currentTarget","elements","amount","step","amountValue","value","delayValue","stepValue","i","then","result","$parcel$interopDefault","Notify","success","concat","catch","error","failure"],"version":3,"file":"03-promises.02b0b406.js.map"}